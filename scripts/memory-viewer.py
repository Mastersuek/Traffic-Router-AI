#!/usr/bin/env python3
"""
–ü—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫ –ø–∞–º—è—Ç–∏ Mem-Agent –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞
"""

import os
import sys
from pathlib import Path
import argparse
from datetime import datetime

def read_memory_file(file_path):
    """–ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–∞–º—è—Ç–∏"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            return f.read()
    except FileNotFoundError:
        return f"–§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω"
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {file_path}: {e}"

def list_entities(memory_dir):
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π –≤ –ø–∞–º—è—Ç–∏"""
    entities_dir = Path(memory_dir) / "entities"
    if not entities_dir.exists():
        return []
    
    return [f.stem for f in entities_dir.glob("*.md")]

def display_system_overview(memory_dir):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –æ–±–∑–æ—Ä–∞ —Å–∏—Å—Ç–µ–º—ã"""
    system_file = Path(memory_dir) / "system.md"
    content = read_memory_file(system_file)
    
    print("=" * 60)
    print("üß† –ü–ê–ú–Ø–¢–¨ –°–ò–°–¢–ï–ú–´ –ú–ê–†–®–†–£–¢–ò–ó–ê–¶–ò–ò –¢–†–ê–§–ò–ö–ê")
    print("=" * 60)
    print(content)
    print("=" * 60)

def display_entity(memory_dir, entity_name):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—É—â–Ω–æ—Å—Ç–∏"""
    entity_file = Path(memory_dir) / "entities" / f"{entity_name}.md"
    content = read_memory_file(entity_file)
    
    print("=" * 60)
    print(f"üìã –°–£–©–ù–û–°–¢–¨: {entity_name.upper()}")
    print("=" * 60)
    print(content)
    print("=" * 60)

def display_all_entities(memory_dir):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π"""
    entities = list_entities(memory_dir)
    
    if not entities:
        print("‚ö†Ô∏è –°—É—â–Ω–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    for entity in entities:
        display_entity(memory_dir, entity)
        print("\n")

def search_memory(memory_dir, search_term):
    """–ü–æ–∏—Å–∫ –ø–æ –ø–∞–º—è—Ç–∏ —Å–∏—Å—Ç–µ–º—ã"""
    results = []
    
    # –ü–æ–∏—Å–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ñ–∞–π–ª–µ
    system_file = Path(memory_dir) / "system.md"
    if system_file.exists():
        content = read_memory_file(system_file)
        if search_term.lower() in content.lower():
            results.append(("system.md", content))
    
    # –ü–æ–∏—Å–∫ –≤ —Å—É—â–Ω–æ—Å—Ç—è—Ö
    entities = list_entities(memory_dir)
    for entity in entities:
        entity_file = Path(memory_dir) / "entities" / f"{entity}.md"
        content = read_memory_file(entity_file)
        if search_term.lower() in content.lower():
            results.append((f"entities/{entity}.md", content))
    
    print("=" * 60)
    print(f"üîç –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û–ò–°–ö–ê: '{search_term}'")
    print("=" * 60)
    
    if not results:
        print("‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return
    
    for file_name, content in results:
        print(f"\nüìÑ –§–∞–π–ª: {file_name}")
        print("-" * 40)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è–º–∏
        lines = content.split('\n')
        for i, line in enumerate(lines, 1):
            if search_term.lower() in line.lower():
                print(f"–°—Ç—Ä–æ–∫–∞ {i}: {line.strip()}")
        
        print("-" * 40)

def main():
    parser = argparse.ArgumentParser(description="–ü—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫ –ø–∞–º—è—Ç–∏ Mem-Agent")
    parser.add_argument("--memory-dir", default="memory", help="–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø–∞–º—è—Ç–∏")
    parser.add_argument("--entity", help="–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å—É—â–Ω–æ—Å—Ç—å")
    parser.add_argument("--all", action="store_true", help="–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—É—â–Ω–æ—Å—Ç–∏")
    parser.add_argument("--search", help="–ü–æ–∏—Å–∫ –ø–æ –ø–∞–º—è—Ç–∏")
    parser.add_argument("--list", action="store_true", help="–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π")
    
    args = parser.parse_args()
    
    memory_dir = Path(args.memory_dir)
    
    if not memory_dir.exists():
        print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø–∞–º—è—Ç–∏ {memory_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        sys.exit(1)
    
    print(f"üß† Mem-Agent Memory Viewer - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    if args.list:
        entities = list_entities(memory_dir)
        print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏:")
        for entity in entities:
            print(f"  - {entity}")
    
    elif args.search:
        search_memory(memory_dir, args.search)
    
    elif args.entity:
        display_entity(memory_dir, args.entity)
    
    elif args.all:
        display_all_entities(memory_dir)
    
    else:
        display_system_overview(memory_dir)

if __name__ == "__main__":
    main()
