"use client"

import { useState } from 'react'
import { StreamingVideoPlayer } from '@/components/ui/streaming-video-player'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'

export default function VideoPlayerDemo() {
  const [videoId, setVideoId] = useState('')
  const [currentVideoId, setCurrentVideoId] = useState('')
  const [quality, setQuality] = useState<'480p' | '640p' | '1024p'>('640p')
  const [progress, setProgress] = useState(0)
  const [cacheStats, setCacheStats] = useState<any>(null)

  const handleLoadVideo = () => {
    if (videoId.trim()) {
      // –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ YouTube URL –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      const ytId = extractYouTubeId(videoId)
      if (ytId) {
        setCurrentVideoId(ytId)
      }
    }
  }

  const extractYouTubeId = (url: string): string => {
    // –ï—Å–ª–∏ —ç—Ç–æ —É–∂–µ ID
    if (url.length === 11 && /^[a-zA-Z0-9_-]+$/.test(url)) {
      return url
    }
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ YouTube URL
    const patterns = [
      /(?:youtube\.com\/watch\?v=|youtu\.be\/|youtube\.com\/embed\/)([^&\n?#]+)/,
      /youtube\.com\/v\/([^&\n?#]+)/
    ]
    
    for (const pattern of patterns) {
      const match = url.match(pattern)
      if (match) {
        return match[1]
      }
    }
    
    return url // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å, –µ—Å–ª–∏ –Ω–µ —Å–º–æ–≥–ª–∏ –∏–∑–≤–ª–µ—á—å
  }

  const loadCacheStats = async () => {
    try {
      const response = await fetch('http://localhost:13083/api/stats')
      if (response.ok) {
        const stats = await response.json()
        setCacheStats(stats)
      }
    } catch (error) {
      console.error('Failed to load cache stats:', error)
    }
  }

  const handleCacheVideo = async () => {
    if (!currentVideoId) return
    
    try {
      const response = await fetch('http://localhost:13083/api/cache', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          videoId: currentVideoId,
          qualities: ['480p', '640p', '1024p'],
          priority: 2
        })
      })
      
      if (response.ok) {
        const result = await response.json()
        alert(`–í–∏–¥–µ–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è. –ü–æ–∑–∏—Ü–∏—è: ${result.queuePosition}`)
      }
    } catch (error) {
      console.error('Failed to cache video:', error)
    }
  }

  return (
    <div className="container mx-auto p-6 space-y-6">
      <div className="text-center">
        <h1 className="text-3xl font-bold mb-2">üé¨ YouTube –ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ü–ª–µ–µ—Ä</h1>
        <p className="text-gray-600">
          –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ—Ç–æ–∫–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ–ø–ª–µ–µ—Ä–∞ —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º
        </p>
      </div>

      {/* –§–æ—Ä–º–∞ –∑–∞–≥—Ä—É–∑–∫–∏ */}
      <Card>
        <CardHeader>
          <CardTitle>–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ</CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="flex gap-2">
            <Input
              placeholder="–í–≤–µ–¥–∏—Ç–µ YouTube URL –∏–ª–∏ Video ID..."
              value={videoId}
              onChange={(e) => setVideoId(e.target.value)}
              className="flex-1"
            />
            <Button onClick={handleLoadVideo} disabled={!videoId.trim()}>
              –ó–∞–≥—Ä—É–∑–∏—Ç—å
            </Button>
          </div>
          
          <div className="flex gap-2 text-sm text-gray-600">
            <span>–ü—Ä–∏–º–µ—Ä—ã:</span>
            <code className="bg-gray-100 px-2 py-1 rounded">dQw4w9WgXcQ</code>
            <code className="bg-gray-100 px-2 py-1 rounded">https://youtu.be/dQw4w9WgXcQ</code>
          </div>
        </CardContent>
      </Card>

      {/* –í–∏–¥–µ–æ–ø–ª–µ–µ—Ä */}
      {currentVideoId && (
        <Card>
          <CardContent className="p-0">
            <StreamingVideoPlayer
              videoId={currentVideoId}
              title={`Video ID: ${currentVideoId}`}
              initialQuality={quality}
              onQualityChange={(newQuality) => setQuality(newQuality as any)}
              onProgress={setProgress}
              className="aspect-video max-h-[600px]"
            />
          </CardContent>
        </Card>
      )}

      {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–µ—à–µ–º */}
      {currentVideoId && (
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <Card>
            <CardHeader>
              <CardTitle>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–µ—à–µ–º</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="flex flex-col gap-2">
                <Button onClick={handleCacheVideo} variant="outline">
                  üì• –ö–µ—à–∏—Ä–æ–≤–∞—Ç—å –≤–æ –≤—Å–µ—Ö –∫–∞—á–µ—Å—Ç–≤–∞—Ö
                </Button>
                <Button onClick={loadCacheStats} variant="outline">
                  üìä –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–µ—à–∞
                </Button>
              </div>
              
              <div className="space-y-2">
                <h4 className="font-semibold">–¢–µ–∫—É—â–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ:</h4>
                <Badge variant="secondary">{quality}</Badge>
              </div>
              
              <div className="space-y-2">
                <h4 className="font-semibold">–ü—Ä–æ–≥—Ä–µ—Å—Å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:</h4>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div 
                    className="bg-blue-600 h-2 rounded-full transition-all duration-300"
                    style={{ width: `${progress}%` }}
                  />
                </div>
                <span className="text-sm text-gray-600">{progress.toFixed(1)}%</span>
              </div>
            </CardContent>
          </Card>

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞ */}
          <Card>
            <CardHeader>
              <CardTitle>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞</CardTitle>
            </CardHeader>
            <CardContent>
              {cacheStats ? (
                <div className="space-y-3">
                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <div className="text-sm text-gray-600">–í—Å–µ–≥–æ –≤–∏–¥–µ–æ:</div>
                      <div className="text-xl font-bold">{cacheStats.totalVideos}</div>
                    </div>
                    <div>
                      <div className="text-sm text-gray-600">–†–∞–∑–º–µ—Ä –∫–µ—à–∞:</div>
                      <div className="text-xl font-bold">{cacheStats.totalSizeGB} GB</div>
                    </div>
                    <div>
                      <div className="text-sm text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏:</div>
                      <div className="text-xl font-bold">{cacheStats.activeDownloads}</div>
                    </div>
                    <div>
                      <div className="text-sm text-gray-600">–í –æ—á–µ—Ä–µ–¥–∏:</div>
                      <div className="text-xl font-bold">{cacheStats.queuedDownloads}</div>
                    </div>
                  </div>
                  
                  <div className="space-y-2">
                    <h4 className="font-semibold">–ü–æ –∫–∞—á–µ—Å—Ç–≤–∞–º:</h4>
                    <div className="flex gap-2">
                      {Object.entries(cacheStats.qualityStats || {}).map(([quality, count]) => (
                        <Badge key={quality} variant="outline">
                          {quality}: {count as number}
                        </Badge>
                      ))}
                    </div>
                  </div>
                  
                  <div className="text-xs text-gray-500 pt-2 border-t">
                    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–µ—à–∞: {cacheStats.config?.maxSizeGB} GB
                  </div>
                </div>
              ) : (
                <div className="text-center text-gray-500">
                  –ù–∞–∂–º–∏—Ç–µ "–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É" –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
                </div>
              )}
            </CardContent>
          </Card>
        </div>
      )}

      {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
      <Card>
        <CardHeader>
          <CardTitle>üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</CardTitle>
        </CardHeader>
        <CardContent className="space-y-3">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
            <div>
              <h4 className="font-semibold mb-2">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–ª–µ–µ—Ä–∞:</h4>
              <ul className="space-y-1 text-gray-600">
                <li>‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ (480p, 640p, 1024p)</li>
                <li>‚Ä¢ –£–º–Ω–æ–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–æ–π</li>
                <li>‚Ä¢ –ü–æ—Ç–æ–∫–æ–≤–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ</li>
                <li>‚Ä¢ –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º</li>
                <li>‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏</li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold mb-2">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</h4>
              <ul className="space-y-1 text-gray-600">
                <li>‚Ä¢ –ö–ª–∏–∫ - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ/–ø–∞—É–∑–∞</li>
                <li>‚Ä¢ –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ - –ø–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω</li>
                <li>‚Ä¢ –ö–æ–ª–µ—Å–æ –º—ã—à–∏ - –≥—Ä–æ–º–∫–æ—Å—Ç—å</li>
                <li>‚Ä¢ –ü—Ä–æ–±–µ–ª - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ/–ø–∞—É–∑–∞</li>
                <li>‚Ä¢ ‚Üê‚Üí - –ø–µ—Ä–µ–º–æ—Ç–∫–∞ –Ω–∞ 10 —Å–µ–∫—É–Ω–¥</li>
              </ul>
            </div>
          </div>
          
          <div className="pt-3 border-t text-xs text-gray-500">
            üí° –í–∏–¥–µ–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–µ—à–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ. 
            –ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–µ—à–∞.
          </div>
        </CardContent>
      </Card>
    </div>
  )
}